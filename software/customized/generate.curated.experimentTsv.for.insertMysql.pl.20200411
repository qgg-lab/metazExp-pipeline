#!/usr/bin/perl
use strict;
use Getopt::Long;
use DBI;
if($#ARGV<0){
	print "\nperl $0 \\\n" . 
                "--curatedExptTsv \\\n" .
                "--updatedExptTsv \\\n" .
		"--filterAssembledTrsptParameterFile \\\n" .
		"--jcecPsiFileList \\\n" .
		"--outputAssemblyDir \\\n" .
                "--outputExptTsv\n";
	exit;
}

my ($curatedExptTsv, $updatedExptTsv, $filterAssembledTrsptParameterFile, $jcecPsiFileList, $outputAssemblyDir, $outputExptTsv);

GetOptions(
        'curatedExptTsv=s'=>\$curatedExptTsv,
        'updatedExptTsv=s'=>\$updatedExptTsv,
	'jcecPsiFileList=s'=>\$jcecPsiFileList,
	'filterAssembledTrsptParameterFile=s'=>\$filterAssembledTrsptParameterFile,
	'outputAssemblyDir=s'=>\$outputAssemblyDir,
        'outputExptTsv=s'=>\$outputExptTsv,
);

# 读取过滤trspt的参数值
my (%exptToFilterTrsptPara, $exptToFilterTrsptParaHref, $line, @valueField, $assemblyFile, $experimentId, $i);
my ($a3ssNum, $a5ssNum, $mxeNum, $riNum, $seNum);
$exptToFilterTrsptParaHref = \%exptToFilterTrsptPara;
open FF, "<$filterAssembledTrsptParameterFile";
# fileName   mappedBase minTrsptCov   minExonCov
# /mnt/home/liujind1/workAS1/3702/004-combine-assemblies-and-annos/../002-assemble-trsptome-on-goodExps/psiOutputDir/SRX3088664/transcriptomeByStringtie.gtf      7.23    3.62    1.81
while($line=<FF>){
	chomp($line);
	@valueField = split(/\t/, $line);
	if($line=~/.*psiOutputDir\/(.*)\/transcriptomeByStringtie\.gtf/){
		$experimentId = $1;
		$exptToFilterTrsptParaHref->{$experimentId}->{"assemblyFile"} = $valueField[0];
		$exptToFilterTrsptParaHref->{$experimentId}->{"minTrsptReadCov"} = $valueField[2];
		$exptToFilterTrsptParaHref->{$experimentId}->{"minExonReadCov"} = $valueField[3];		
	}
}
close FF;


# 读取020中最终更新的样品信息
# 将Ecotype/Cultivar/Genotype/Tissue/SubTissue/Development/TissueGroup/Treatment/TreatmentGroup/dataSource/Phenotype
# 读入hash中
my (%updatedExptInfo, $updateExptInfoHref);
my (@nameField, @valueField, %tmpHash, $exptId);
$updateExptInfoHref = \%updatedExptInfo;
open FF, "<$updatedExptTsv";
$line=<FF>;
chomp($line);
@nameField = split(/\t/, $line);
while($line=<FF>){
	chomp($line);
	@valueField = split(/\t/, $line);
	for($i=0; $i<=$#valueField; $i++){
		$tmpHash{$nameField[$i]} = $valueField[$i];
	}
	$exptId = $tmpHash{"Experiment"};
	$updateExptInfoHref->{$exptId}->{"Ecotype"}= $tmpHash{"Ecotype"};
	$updateExptInfoHref->{$exptId}->{"Cultivar"}= $tmpHash{"Cultivar"};
	$updateExptInfoHref->{$exptId}->{"Genotype"}= $tmpHash{"Genotype"};
	$updateExptInfoHref->{$exptId}->{"Tissue"}= $tmpHash{"Tissue"};
	$updateExptInfoHref->{$exptId}->{"SubTissue"}= $tmpHash{"SubTissue"};
	$updateExptInfoHref->{$exptId}->{"Development"}= $tmpHash{"Development"};
	$updateExptInfoHref->{$exptId}->{"TissueGroup"}= $tmpHash{"TissueGroup"};
	$updateExptInfoHref->{$exptId}->{"Treatment"}= $tmpHash{"Treatment"};
	$updateExptInfoHref->{$exptId}->{"treatmentGroup"}= $tmpHash{"treatmentGroup"};
	$updateExptInfoHref->{$exptId}->{"dataSource"}= $tmpHash{"dataSource"};
	$updateExptInfoHref->{$exptId}->{"Phenotype"}= $tmpHash{"Phenotype"};
	$updateExptInfoHref->{$exptId}->{"specificTag"}= $tmpHash{"specificTag"};
}
close FF;



my ($nameString, $valueString);
my ($a3ssNum, $a5ssNum, $mxeNum, $riNum, $seNum, $totalAsNum);
my (@nameField, @valueField, %tmpHash);
# Ecotype Cultivar        Genotype        Tissue  SubTissue       Development     TissueGroup     Treatment       TreatmentGroup  Experiment
#       Study   DataSource      Base    Layout  SpotsNum        ReadNum SpotLen ReadLen Gather  AS      Assemble        RunList Phenotype       alignPercent    mappedBases     mappedReadNum   detectedReadLen libraryType     phredScore

# 从010:filter中读取参与as识别的experiment
open FF, "<$curatedExptTsv";
open WW, ">$outputExptTsv";
$line = <FF>;
chomp($line);
@nameField = split(/\t/, $line);
while($line=<FF>){
	chomp($line);
	@valueField = split(/\t/, $line);
	for($i=0; $i<=$#valueField; $i++){
		$valueField[$i]=~s/ //;
		$tmpHash{$nameField[$i]} = $valueField[$i];
	}

	$experimentId = $tmpHash{"Experiment"};

	# 在jcecPsiFileList中获得experimentId下5种类型AS的数量
	($totalAsNum, $a3ssNum, $a5ssNum, $mxeNum, $riNum, $seNum) = (0, 0, 0, 0, 0, 0);
	&getAsNum($experimentId, $jcecPsiFileList, \$a3ssNum, \$a5ssNum, \$mxeNum, \$riNum, \$seNum);
	$totalAsNum = $a3ssNum + $a5ssNum + $mxeNum + $riNum + $seNum;

	# 如果某个实验中的可变剪接数为0，那么放弃该实验
	next if($totalAsNum ==0 );

######### 生成experiment字段信息 ##############
	$nameString = join(", ", 
	"ecotype", 
	"cultivar", 
	"genotype", 
	"tissue", 
	"subTissue", 
	"development", 
	"tissueGroup", 
	"treatment", 
	"treatmentGroup", 
	"experimentId", 
	"studyId", 
	"dataSource", 
	"totalBasedVolume", 
	"layout", 
	"spotNum", 
	"readNum", 
	"splotLen", 
	"readLen", 
	"assemblyTag", 
	"runIdList", 
	"phenotype", 
	"alignPercentage", 
	"mappedBaseVolume", 
	"mappedReadNum", 
	"detectedReadLen", 
	"libraryType", 
	"phredScore", 
	"fileterTrsptMinTrsptReadCov", 
	"filterTrsptMinExonReadCov", 
	"asNum",
	"a3ssNum", 
	"a5ssNum", 
	"mxeNum", 
	"riNum", 
	"seNum",
	"specificTag"
);

	# 生成experiment的值信息
	if($tmpHash{"Assemble"} == 1 and (-e $exptToFilterTrsptParaHref->{$experimentId}->{"assemblyFile"})){
		#system("cp " . $exptToFilterTrsptParaHref->{$experimentId}->{"assemblyFile"} . " " . $outputAssemblyDir . "/" . $experimentId . ".gtf");
		$tmpHash{"Assemble"} = "Y";
	}else{
		$tmpHash{"Assemble"} = "N";
	}
	if(not exists($exptToFilterTrsptParaHref->{$experimentId}->{"minTrsptReadCov"})){
		$exptToFilterTrsptParaHref->{$experimentId}->{"minTrsptReadCov"} = -1;
		$exptToFilterTrsptParaHref->{$experimentId}->{"minExonReadCov"} = -1;
	}

	if($updateExptInfoHref->{$experimentId}->{"Ecotype"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Ecotype"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Ecotype"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Ecotype"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Cultivar"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Cultivar"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Cultivar"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Cultivar"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Genotype"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Genotype"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Genotype"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Genotype"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Tissue"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Tissue"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Tissue"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Tissue"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"SubTissue"} eq "-" or $updateExptInfoHref->{$experimentId}->{"SubTissue"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"SubTissue"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"SubTissue"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Development"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Development"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Development"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Development"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"TissueGroup"} eq "-" or $updateExptInfoHref->{$experimentId}->{"TissueGroup"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"TissueGroup"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"TissueGroup"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Treatment"} eq "-" or $updateExptInfoHref->{$experimentId}->{"Treatment"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"Treatment"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Treatment"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"treatmentGroup"} eq "-" or $updateExptInfoHref->{$experimentId}->{"treatmentGroup"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"treatmentGroup"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"treatmentGroup"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"dataSource"} eq "-" or $updateExptInfoHref->{$experimentId}->{"dataSource"} eq ""){
		$updateExptInfoHref->{$experimentId}->{"dataSource"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"dataSource"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"Phenotype"} eq "-" or $updateExptInfoHref->{$experimentId}->{""} eq "Phenotype"){
		$updateExptInfoHref->{$experimentId}->{"Phenotype"} = "not collected"
	}
	$updateExptInfoHref->{$experimentId}->{"Phenotype"}=~s/, /,_/g;

	if($updateExptInfoHref->{$experimentId}->{"specificTag"} eq "-" or $updateExptInfoHref->{$experimentId}->{""} eq "specificTag"){
		$updateExptInfoHref->{$experimentId}->{"specificTag"} = 0;
	}

	$tmpHash{"libraryType"} = "NA" if($tmpHash{"libraryType"} eq "-" or $tmpHash{"libraryType"} eq "");
	$tmpHash{"libraryType"}=~s/, /,_/g;
	$valueString = join(", ", 
		$updateExptInfoHref->{$experimentId}->{"Ecotype"},
		$updateExptInfoHref->{$experimentId}->{"Cultivar"},
		$updateExptInfoHref->{$experimentId}->{"Genotype"},
		$updateExptInfoHref->{$experimentId}->{"Tissue"},
		$updateExptInfoHref->{$experimentId}->{"SubTissue"},
		$updateExptInfoHref->{$experimentId}->{"Development"},
		$updateExptInfoHref->{$experimentId}->{"TissueGroup"},
		$updateExptInfoHref->{$experimentId}->{"Treatment"},
		$updateExptInfoHref->{$experimentId}->{"treatmentGroup"},
		$tmpHash{"Experiment"},
		$tmpHash{"Study"},  
		$updateExptInfoHref->{$experimentId}->{"dataSource"},
		$tmpHash{"Base"},  
		$tmpHash{"Layout"},  
		$tmpHash{"SpotsNum"},  
		$tmpHash{"ReadNum"},  
		$tmpHash{"SpotLen"}, 
		$tmpHash{"ReadLen"}, 
		$tmpHash{"Assemble"}, 
		$tmpHash{"RunList"}, 
		$updateExptInfoHref->{$experimentId}->{"Phenotype"}, 
		$tmpHash{"alignPercent"}, 
		$tmpHash{"mappedBases"}, 
		$tmpHash{"mappedReadNum"}, 
		$tmpHash{"detectedReadLen"}, 
		$tmpHash{"libraryType"}, 
		$tmpHash{"phredScore"}, 
		$exptToFilterTrsptParaHref->{$experimentId}->{"minTrsptReadCov"}, 
		$exptToFilterTrsptParaHref->{$experimentId}->{"minExonReadCov"}, 
		$totalAsNum,
		$a3ssNum,
		$a5ssNum, 
		$mxeNum, 
		$riNum, 
		$seNum,
		$updateExptInfoHref->{$experimentId}->{"specificTag"}
);
	
	# 输出1条experiment
	print WW $nameString . "___" . $valueString . "\n";
}
close FF;
close WW;

# 从总的psiFile中获得指定experiment的各类AS数量
# inclusion和skiping两者至少有1个read覆盖
sub getAsNum{
	my ($exptId, $psiFileList, $a3ssNum, $a5ssNum, $mxeNum, $riNum, $seNum) =@_;
	my (@asNum, $i, @psiFile, $psiFile, @line, $line, @field, $cmd, $mulLineText);
	
	@psiFile = split(/,/, $psiFileList);
	for($i=0; $i<=$#psiFile; $i++){
		$asNum[$i]=0;
		$cmd = "grep \"" . $exptId . "\" " . $psiFile[$i];
		$mulLineText = `$cmd`;
		@line = ();
		@line = split(/\n/, $mulLineText);
		foreach $line(@line){
			@field = split(/\t/, $line);
			next if($field[1] + $field[2] == 0);
			$asNum[$i]++;
		}
	}
	($$a3ssNum, $$a5ssNum, $$mxeNum, $$riNum, $$seNum) = ($asNum[0], $asNum[1], $asNum[2], $asNum[3], $asNum[4]);
}
